---
- name: This is what i used developing create.yml
  hosts: localhost
  vars:
    platforms:
      - name: ci-rocky8
        image: quay.io/rockylinux/rockylinux:8
        dockerfile: ../resources/Dockerfile-dnf.j2
        command: /lib/systemd/systemd
        network_mode: bridge
        networks:
          - name: molecule-external
          - name: molecule-internal
            internal: true
        network:
          - molecule-external
          - molecule-internal
        volumes:
          - "/sys/fs/cgroup:/sys/fs/cgroup:ro"
        capabilities:
          - SYS_ADMIN
        systemd: true
        tty: true
        groups:
        - server

      - name: ci-client
        image: quay.io/rockylinux/rockylinux:8
        dockerfile: ../resources/Dockerfile.j2
        command: /lib/systemd/systemd
        network_mode: bridge
        network:
          - molecule-internal
        volumes:
        - "/sys/fs/cgroup:/sys/fs/cgroup:ro"
        capabilities:
        - SYS_ADMIN
        systemd: true
        tty: true
        groups:
        - client_group

  tasks:

    - name: Get the one platform with networks defined
      ansible.builtin.debug:
        msg: "{{ item }}"
      loop: "{{ platforms }}"
      loop_control:
        extended: true
        label: "{{ item }}"
      register: podman_networks
      when:
        - item.networks is defined
        - ansible_loop.first
      failed_when: false

    - name: Get network info
      containers.podman.podman_network_info:
        name: "{{ item.name }}"
      loop: "{{ podman_networks.results[0].ansible_loop.allitems[0].networks }}"
      loop_control:
        label: "{{ item.name }}"
      register: podman_network
      failed_when: false

    - name: Debug podman_networks
      ansible.builtin.debug:
        var: podman_networks

    - name: Debug podman_network
      ansible.builtin.debug:
        var: podman_network

    - name: Debug Create Network
      ansible.builtin.debug:
        msg: "{{ item.item.name }}"
      loop: "{{ podman_network.results }}"
      loop_control:
        label: "{{ item.item.name }}"
      when:
        - item.msg is defined
#        - item.networks is not defined
#        - item.skip_reason is not defined
#        - item.skipped is not defined
#        - false_condition is not defined
