# vim: set ft=yaml ts=2 expandtab:
---

name: CI
on:  # yamllint disable-line rule:truthy
  workflow_call:
    inputs:
      targeted_branch:
        type: string

jobs:

  selectbranch:
    uses: mafalb/workflows/.github/workflows/reusable-selectbranch.yml@main
    with:
      targeted_branch: ${{ inputs.targeted_branch }}

  molecule:

    runs-on: ubuntu-20.04
    needs: selectbranch
    strategy:
      fail-fast: false
      matrix:
        target:
          - c8s
          - alma8
          - rocky8
          - centos7
          - ubuntu20
          - ubuntu22
    env:
      CI_TARGET: ${{ matrix.target }}
      PY_COLORS: 1
      ANSIBLE_FORCE_COLOR: 1

    steps:

      - name: Checkout workflows
        uses: actions/checkout@v4
        with:
          repository: mafalb/workflows
          path: workflows
          ref: ${{ needs.selectbranch.outputs.ref }}

      - name: Install Ansible
        uses: mafalb/workflows/.github/actions/installansible@main
        with:
          extra_packages: 'molecule-plugins[docker,podman],molecule'
          ref: dev  # FIX

      - name: Checkout
        uses: actions/checkout@v4
        with:
          path: ansible_collections/mafalb/squid

      - name: molecule default scenario
        working-directory: ansible_collections/mafalb/squid
        run: |
          source ~/.virtualenvs/ansible/bin/activate
          molecule -c molecule/resources/molecule.yml -e ".env-$CI_TARGET.yml" test

      - name: molecule custom_template scenario
        working-directory: ansible_collections/mafalb/squid
        run: |
          source ~/.virtualenvs/ansible/bin/activate
          molecule -c molecule/resources/molecule.yml -e ".env-$CI_TARGET.yml" test -s custom_template

      - name: molecule squid_cfg scenario
        working-directory: ansible_collections/mafalb/squid
        run: |
          source ~/.virtualenvs/ansible/bin/activate
          molecule -c molecule/resources/molecule.yml -e ".env-$CI_TARGET.yml" test -s squid_cfg

  allsuccess:
    if: success() || failure()
    uses: ./.github/workflows/reusable-allsuccess.yml
    with:
      joblist: ${{ toJSON(needs) }}
    needs:
      - selectbranch
      - molecule

...
